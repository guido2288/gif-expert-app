{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/Getgif.js","components/GifGrid.js","hooks/useFechGif.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","propType","PropTypes","func","isRequired","GifGridItem","title","url","console","log","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAe,OAQf,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YA0BhCZ,EAAce,SAAW,CACrBd,c,OAAee,EAAUC,KAAKC,YCjC3B,IAAMC,EAAc,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGlC,OAFAC,QAAQC,IAAIF,GAGR,yBAAKG,UAAU,0CACX,yBAAKC,IAAMJ,EAAMK,IAAMN,IACvB,2BAAIA,EAAJ,O,uBCNEO,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbR,EAFa,iDAEoCS,UAAUF,GAF9C,+DAGAG,MAAOV,GAHP,cAGbW,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QAVvB,kBAcZc,GAdY,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACd1B,mBAAS,CAC/BgC,KAAM,GACNQ,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBxC,OAdAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAKa,EACLL,SAAS,SAIvB,CAACd,IAIIe,EDjBkBK,CAAcpB,GAA/BM,EAF6B,EAE7BA,KAAMQ,EAFuB,EAEvBA,QAId,OACI,oCACI,4BAAOd,GAELc,GAAW,yCAEb,yBAAKlB,UAAU,aAEPU,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIY,IAAOZ,EAAIC,IACPD,UEiBjBa,EAnCM,WAAM,MAGahD,mBAAS,IAHtB,mBAGhBiD,EAHgB,KAGJlD,EAHI,KAWvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAeA,cAAeA,IAC9B,6BAIA,4BAEQkD,EAAWf,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIqB,IAAQrB,EACRA,SAAUA,UCrBtCwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.b5b8d759.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategories = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length >2){\r\n            setCategories( catg => [ inputValue,...catg]);\r\n            setInputValue ('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\nAddCategories.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    console.log(url);\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n export const getGif = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=r7smesNco3RoljhkiG7r2rfV2eLMnQYl`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n};","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFechGif';\r\n\r\n\r\nexport const GifGrid = ({ category} ) => {\r\n\r\n    const { data, loading} = useFetchGifs( category );\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 >{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n            <div className='card-grid'>      \r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem  \r\n                            key= { img.id }\r\n                            {...img}/>\r\n                    ))\r\n                }     \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGif} from '../helpers/Getgif';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGif( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    },[category])   \r\n    \r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategories } from './components/AddCategories';\r\nimport { GifGrid} from './components/GifGrid'\r\n//rafc tab para crearlo automatico\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    /*const handleAdd =() => {\r\n        setCategories( [...categories, 'HunterXHunter'] );\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategories setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>( \r\n                        <GifGrid \r\n                            key = { category }\r\n                            category={category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport GifExpertApp from './GifExpertApp'\r\n\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}